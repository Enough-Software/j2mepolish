/** 
  * The polish.css files contains all
  * design information about a project.
  * It can be adjusted for specific devices
  * or device groups by putting it in the 
  * appropriate sub-folder.
  * If you want to adjust a design for all
  * Nokia devices, define it in "resources/Nokia/polish.css"
  * and so on. Only new and different settings
  * need to be specified in such polish.css files. 
  */

/**
  * the colors which are defined in
  * the colors section can later be referenced.
  * This makes changes easy, since the color
  * just needs to be changed in one position.
  * Even default colors (like blue, green, lime, etc)
  * can be changed here. 
  */
colors {
	bgColor:  rgb(132,143,96);
	bgColorPressed: #221;
	brightBgColor:  rgb(238,241,229);
	translucentBgColor:  argb(130, 238,241,229);
	brightFontColor: rgb(238,241,229);
	fontColor: rgb( 30, 85, 86 );
}

/**
  * The title style is a predefined style which is used
  * for all screen-titles.
  */
title {
	padding: 2;
	margin-top: 0;
	margin-bottom: 5;
	margin-left: 0;
	margin-right: 0;
	font-face: proportional;
	font-size: large;
	font-style: bold;
	font-color: brightFontColor;
	background-color: bgColor;
	border: none;
	layout: horizontal-center | horizontal-expand;
}

/**
  * The focused style is a predefined style which
  * is used by lists, forms, choice-groups and so on by default
  * unless you specify a [style-name]:hover style or a focused-style attribute.
  * This style will be used for highlighting the currently focused item.
  */
focused {
	background-color: black;
	font-color: white;
}

/** 
  * The .mainScreen style is a static style, which
  * is set in the MIDlet source-code with the //#style directive.
  * If the source-code would not have defined this
  * style, we could use the dynamic style "list" to design all
  * list-screens. 
  * An interesting attribute is the "columns" attribute which
  * is used to use a table with two columns instead of the default
  * layout.
  */
.mainScreen {
	padding: 5;
	padding-left: 10;
	padding-right: 10;
	padding-vertical: 10;
	background {
		color: brightBgColor;
	}
	layout: horizontal-expand | horizontal-center | vertical-center;
	columns: 2;
	columns-width: equal;
}

/**
  * The .mainItem style is also a static style, which
  * is set in the MIDlet source-code with the //#style directive.
  * If the source-code would not have defined this
  * style, we could use the dynamic style "listitem" to design all
  * items on the list-screens. 
  * An interesting attribute is the "icon-image" URL, which uses
  * the %INDEX% keyword. The first list-item will use the image
  * "icon0.png", the second "icon1.png" and so on. 
  */
.mainItem {
	margin: 2; /* for the border of the :hover style */
	padding: 5;
	background: none;
	font-color: fontColor;
	font-style: bold;
	font-size: small;
	layout: center; /* | expand; */
	max-width: 100;
	icon-image: url( icon%INDEX%.png );
	icon-image-align: top;
}

.mainItem:hover {
	margin: 0;
	background {
		type: round-rect;
		arc: 8;
		color: brightBgColor;
		border-color: fontColor;
		border-width: 2;
	}
	layout: expand | center;	
}

.mainItem:pressed {
	margin: 0;
	background {
		type: round-rect;
		arc: 8;
		color: fontColor;
		border-color: fontColor;
		border-width: 2;
	}
	font-color: brightFontColor;
	layout: expand | center;	
}

.fadeOut extends .mainItem {
	//#if polish.midp2
		view-type: fade-out;	
		fade-out-transparency-end: 40;
	//#else
		background-color: gray;
	//#endif
}

.fadeIn extends .mainItem {
	//#if polish.midp2
		view-type: fade-in;	
		fade-in-transparency-start: 40;
		fade-in-next-style: .mainItem;
	//#endif
}


alert extends .mainScreen {
	//#if polish.midp2
		screen-change-animation: fade;
	//#endif
}

alertcontent {
	font-color: fontColor;
	font-size: small;
	font-style: bold;
}

.loadGameAlert {
	margin: 20;
	padding: 5;
	padding-left: 15;
	padding-right: 15;
	layout: horizontal-expand | horizontal-center | vertical-center;
	background-color: argb( 150, 255, 255, 255 ); /*translucentBgColor; */
	show-dismiss-command: false;
}


/************* Menu ********************************************************************/

/**
  * the menu style is a predefined style for
  * designing the fullscreen-menu.
  * The font-settings (font-color,
  * font-face, font-style and font-size)
  * are used to design the menu-texts
  * (like Options, Select, or Cancel).
  * With the focused-style attribute
  * another style than the default "focused"
  * style is used for the menu. 
  */
menu {
	margin-left: 2;
	padding: 2;
	background {
		type: round-rect;
		color: brightBgColor;
		border-width: 2;
		border-color: bgColor;
	}
	font-color: brightFontColor;
	font-style: bold;
	menubar-color: bgColor;
	view-type: slide-up;
}

/**
  * The menuItem style is a predefined style
  * for the actual commands in a fullscreen-menu.
  * When the menuItem style is not defined,
  * the menu style will be used instead. 
  */
menuItem {
	margin-top: 2;
	padding: 2;
	padding-left: 5;
	font {
		color: fontColor;
		size: medium;
		style: bold;
	}
	layout: left;
}

.deactivatedCommand extends menuItem {
	font-color: gray;
}

/**
  * A focused menuItem
  */
.menuItem:hover {
	background-color: bgColor;
	font-color: brightFontColor;
	layout: left | horizontal-expand;
}


/**
  * A pressed menuItem
  */
.menuItem:pressed {
	background-color: bgColorPressed;
	font-color: brightFontColor;
	layout: left | horizontal-expand;
}

