<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." default="j2mepolish" name="enough-polish-sample-localization">
	

	<property file="${user.name}.properties" />
	<property name="polish.home" location="../enough-polish-build" />
	<property file="${polish.home}/global.properties" />
	<property  name="device" value="Generic/AnyPhone" />

	
	<!-- task definitions -->
	<!-- classpath="import/enough-j2mepolish-build.jar:import/jdom.jar:import/proguard.jar" -->
	<taskdef 
		name="j2mepolish"
		classname="de.enough.polish.ant.PolishTask" 
		classpath="${polish.home}/bin/classes:${polish.home}/lib/jdom.jar" 
	/>

		
	<!-- build targets, each target can be called via "ant [name]", 
		 e.g. "ant clean", "ant notest j2mepolish" or just "ant" for calling the default-target -->
	
	<target name="test">
		<property name="test" value="true"/>
		<property name="dir.work" value="build/test" />
	</target>
		
	<target name="deploy">
		<property name="deploy-url" value="http://193.22.164.185:8080/"/>
	</target>
			
	<target name="init">
	  	<property name="test" value="false"/>
		<property name="deploy-url" value=""/>
		<property name="customization" value="" />
		<property name="dir.work" value="build/real/${customization}" />
		<property name="dir.dist" value="dist/${customization}" />
	</target>
	    
	<target depends="init" name="j2mepolish">
		<j2mepolish>
		    <!-- general settings -->
			<info copyright="Copyright 2009 enough software. All rights reserved." 
				deleteConfirm="Do you really want to kill me?" 
				description="A simple menu screen." 
				icon="dot.png" 
				infoUrl="http://www.enough.de/dictionary" 
				jarName="${polish.vendor}-${polish.name}-${polish.locale}-example.jar" 
				jarUrl="${deploy-url}${polish.jarName}" 
				name="J2ME Polish Example" 
				vendorName="Enough Software" 
				version="1.3.4"
				optionalPermissions="javax.microedition.io.Connector.http"
		    />
			<!-- selection of supported devices -->
			<deviceRequirements if="test">
				<requirement name="Identifier" value="${device}"/>
			</deviceRequirements>
			<deviceRequirements unless="test">
				<requirement name="Identifier" value="${device}"/>
			</deviceRequirements>
		    <!-- build settings -->
			<build  
	                symbols="polish.skipArgumentCheck" 
	                usePolishGui="true"
					workDir="${dir.work}"
					destDir="${dir.dist}"
				>
				<!-- midlets definition -->
				<midlet class="de.enough.polish.example.MenuMidlet" name="J2ME Polish"/>
				<!-- project-wide variables - used for preprocessing  -->
				<variables>
					<variable name="update-url" value="http://www.enough.de/update"/>
					<variable name="polish.css.allowAllAttributes" value="true" />
					<variable
						name="polish.FullScreen"
						value="menu" 
						unless="polish.blackberry || polish.android" 
					/>
					<variable name="polish.MenuBar.useExtendedMenuBar" value="true" />
					<!-- use available height instead of the CSS standard width for min-height, min-item-height, max-height, etc: -->
					<variable name="polish.Item.useHeightInsteadOfWidth" value="true" />
				</variables>
				<!--
				<jad>
					 <attribute 
						name="MIDlet-Push-1" 
						value="socket://:79, com.sun.example.SampleChat, *" 
						if="polish.midp2" 
						/>
					<attribute name="MyAttribute1" value="Value1" />
					<attribute name="MyAttribute2" value="Value2" />
					<attribute name="MyAttribute3" value="Value3" />
				</jad>
				-->
				<!-- obfuscator settings: do not obfuscate when the test-property is true -->
				<obfuscator  name="ProGuard" unless="test">
					<keep class="de.enough.polish.example.Dummy" />
				</obfuscator>
				<!-- debug settings: only include debug setting when the test-property is true -->
				<debug if="test" level="error"  verbose="true">
					<!--
					<filter level="debug" class="de.enough.polish.ui.MasterCanvas"/>
					<filter level="debug" class="de.enough.polish.ui.Alert"/>
					<filter level="debug" class="de.enough.polish.ui.StyleSheet"/>
					<filter level="info" class="de.enough.polish.ui.Container"/>
					<filter level="debug" class="de.enough.polish.ui.Screen"/>
					<filter level="debug" pattern="de.enough.polish.example.*"/>
					<filter level="debug" class="de.enough.polish.ui.Screen"/>
					<filter level="debug" class="de.enough.polish.ui.ContainerView"/>
					-->
					<filter level="info" pattern="de.enough.polish.ui.*"/>
					<filter level="debug" pattern="de.enough.polish.util.*"/>
				</debug>
				<!-- play around with an additional preprocessor: 
				<preprocessor 
					class="de.enough.polish.extensions.TestProcessor" 
					classPath="../enough-polish-extensions/bin/classes" 
					>
					<parameter name="message" value="hallo welt" />
					<parameter name="relativeFile" value="../enough-polish-extensions/source" />
					<parameter name="absoluteFile" value="/home/enough/Documents/Text.swt" />
				</preprocessor>
				-->
				<resources
					dir="resources/base"
					defaultexcludes="yes"
					excludes="readme.txt"
				>
					<root dir="resources/customizations/${customization}" if="${customization}.enabled" />
					<localization dynamic="false" locales="en_US" if="test" />
					<localization dynamic="true" defaultLocale="en_US" locales="en_US" unless="test" />
				</resources>
			</build>
			<emulator if="test" />
		</j2mepolish>
	</target>


	<target description="allows a clean build. You should call [ant clean] whenever you made changes to devices.xml, vendors.xml or groups.xml" name="clean">
		<delete dir="build"/>
		<delete dir="dist"/>
	</target>
	
	<target name="emulator" depends="test,j2mepolish" description="launches the emulator after building." />

	<target name="cleanbuild" depends="clean,j2mepolish" />
	
	<target name="enableBarbie">
		<property name="customization" value="Barbie" />
		<property name="Barbie.enabled" value="true" />
	</target>
		
	<target name="barbie"
			description="customizes this project with the settings found in resources/customizations/Barbie"
			depends="enableBarbie, j2mepolish"
	/>

	<target name="emulatorBarbie" depends="test,enableBarbie,j2mepolish" description="launches the emulator after building with the barbie customization." />
	
	<target name="enableFrogger">
		<property name="customization" value="Frogger" />
		<property name="Frogger.enabled" value="true" />
	</target>
		
	<target name="frogger"
			description="customizes this project with the settings found in resources/customizations/Frogger"
			depends="enableFrogger, j2mepolish"
	/>
	
	<target name="emulatorFrogger" depends="test,enableFrogger,j2mepolish" description="launches the emulator after building with the frogger customization." />

	<target name="enableAnimations">
		<property name="customization" value="Animations" />
		<property name="Animations.enabled" value="true" />
		<property name="polish.MenuBar.useExtendedMenubar" value="true" />
	</target>
		
	<target name="animations"
			description="customizes this project with the settings found in resources/customizations/Animations"
			depends="enableAnimations, j2mepolish"
	/>

	<target name="emulatorAnimations" depends="test,enableAnimations,j2mepolish" description="launches the emulator after building with the animations customization." />

	<target 
		name="build-all"
		description="Builds your application in all customizations." 
		>
		<subant target="j2mepolish" buildpath="." genericantfile="build.xml" inheritall="false" ></subant>
		<subant target="frogger" buildpath="." genericantfile="build.xml" inheritall="false" ></subant>
		<subant target="barbie" buildpath="." genericantfile="build.xml" inheritall="false" ></subant>
		<subant target="animations" buildpath="." genericantfile="build.xml" inheritall="false" ></subant>
	</target>


</project>
