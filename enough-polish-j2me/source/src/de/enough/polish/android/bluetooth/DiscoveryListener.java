//#condition polish.javaplatform >= Android/2.0
// generated by de.enough.doc2java.Doc2Java (www.enough.de) on Tue Mar 24 10:34:27 EET 2009
package de.enough.polish.android.bluetooth;

/**
 * 
 * The <code>DiscoveryListener</code> interface allows an application
 * to receive device discovery and service discovery events.
 * This interface provides four methods, two for discovering
 * devices and two for discovering services.
 * 
 * <DD>1.2</DD>
 * <HR>
 * 
 * <!-- =========== FIELD SUMMARY =========== -->
 * 
 * <A NAME="field_summary"><!-- --></A>
 * <TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
 * <TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
 * <TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
 * <B>Field Summary</B></FONT></TH>
 * </TR>
 * <TR BGCOLOR="white" CLASS="TableRowColor">
 * <TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
 * <CODE>static&nbsp;int</CODE></FONT></TD>
 * <TD><CODE><B><A HREF="DiscoveryListener.html#INQUIRY_COMPLETED" tppabs="http://java.sun.com/javame/reference/apis/jsr082/javax/bluetooth/DiscoveryListener.html#INQUIRY_COMPLETED">INQUIRY_COMPLETED</A></B></CODE>
 * 
 * <BR>
 * &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Indicates the normal completion of device
 * discovery.</TD>
 * </TR>
 * <TR BGCOLOR="white" CLASS="TableRowColor">
 * <TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
 * <CODE>static&nbsp;int</CODE></FONT></TD>
 * <TD><CODE><B><A HREF="DiscoveryListener.html#INQUIRY_ERROR" tppabs="http://java.sun.com/javame/reference/apis/jsr082/javax/bluetooth/DiscoveryListener.html#INQUIRY_ERROR">INQUIRY_ERROR</A></B></CODE>
 * 
 * <BR>
 * &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Indicates that the inquiry request failed to complete normally,
 * but was not cancelled.</TD>
 * </TR>
 * <TR BGCOLOR="white" CLASS="TableRowColor">
 * <TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
 * <CODE>static&nbsp;int</CODE></FONT></TD>
 * <TD><CODE><B><A HREF="DiscoveryListener.html#INQUIRY_TERMINATED" tppabs="http://java.sun.com/javame/reference/apis/jsr082/javax/bluetooth/DiscoveryListener.html#INQUIRY_TERMINATED">INQUIRY_TERMINATED</A></B></CODE>
 * 
 * <BR>
 * &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Indicates device discovery has been canceled
 * by the application and did not complete.</TD>
 * </TR>
 * <TR BGCOLOR="white" CLASS="TableRowColor">
 * <TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
 * <CODE>static&nbsp;int</CODE></FONT></TD>
 * <TD><CODE><B><A HREF="DiscoveryListener.html#SERVICE_SEARCH_COMPLETED" tppabs="http://java.sun.com/javame/reference/apis/jsr082/javax/bluetooth/DiscoveryListener.html#SERVICE_SEARCH_COMPLETED">SERVICE_SEARCH_COMPLETED</A></B></CODE>
 * 
 * <BR>
 * &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Indicates the normal completion of service
 * discovery.</TD>
 * </TR>
 * <TR BGCOLOR="white" CLASS="TableRowColor">
 * <TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
 * <CODE>static&nbsp;int</CODE></FONT></TD>
 * <TD><CODE><B><A HREF="DiscoveryListener.html#SERVICE_SEARCH_DEVICE_NOT_REACHABLE" tppabs="http://java.sun.com/javame/reference/apis/jsr082/javax/bluetooth/DiscoveryListener.html#SERVICE_SEARCH_DEVICE_NOT_REACHABLE">SERVICE_SEARCH_DEVICE_NOT_REACHABLE</A></B></CODE>
 * 
 * <BR>
 * &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Indicates the service search could not be completed because
 * the remote device provided to
 * <code>DiscoveryAgent.searchServices()</code> could not be
 * reached.</TD>
 * </TR>
 * <TR BGCOLOR="white" CLASS="TableRowColor">
 * <TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
 * <CODE>static&nbsp;int</CODE></FONT></TD>
 * <TD><CODE><B><A HREF="DiscoveryListener.html#SERVICE_SEARCH_ERROR" tppabs="http://java.sun.com/javame/reference/apis/jsr082/javax/bluetooth/DiscoveryListener.html#SERVICE_SEARCH_ERROR">SERVICE_SEARCH_ERROR</A></B></CODE>
 * 
 * <BR>
 * &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Indicates the service search terminated with an error.</TD>
 * </TR>
 * <TR BGCOLOR="white" CLASS="TableRowColor">
 * <TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
 * <CODE>static&nbsp;int</CODE></FONT></TD>
 * <TD><CODE><B><A HREF="DiscoveryListener.html#SERVICE_SEARCH_NO_RECORDS" tppabs="http://java.sun.com/javame/reference/apis/jsr082/javax/bluetooth/DiscoveryListener.html#SERVICE_SEARCH_NO_RECORDS">SERVICE_SEARCH_NO_RECORDS</A></B></CODE>
 * 
 * <BR>
 * &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Indicates the service search has completed with no
 * service records found on the device.</TD>
 * </TR>
 * <TR BGCOLOR="white" CLASS="TableRowColor">
 * <TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
 * <CODE>static&nbsp;int</CODE></FONT></TD>
 * <TD><CODE><B><A HREF="DiscoveryListener.html#SERVICE_SEARCH_TERMINATED" tppabs="http://java.sun.com/javame/reference/apis/jsr082/javax/bluetooth/DiscoveryListener.html#SERVICE_SEARCH_TERMINATED">SERVICE_SEARCH_TERMINATED</A></B></CODE>
 * 
 * <BR>
 * &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Indicates the service search has been canceled
 * by the application and did not complete.</TD>
 * </TR>
 * </TABLE>
 * &nbsp;
 * <!-- ========== METHOD SUMMARY =========== -->
 * 
 * <A NAME="method_summary"><!-- --></A>
 * <TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
 * <TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
 * <TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
 * <B>Method Summary</B></FONT></TH>
 * </TR>
 * <TR BGCOLOR="white" CLASS="TableRowColor">
 * <TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
 * <CODE>&nbsp;void</CODE></FONT></TD>
 * <TD><CODE><B><A HREF="DiscoveryListener.html#deviceDiscovered(javax.bluetooth.RemoteDevice, javax.bluetooth.DeviceClass)" tppabs="http://java.sun.com/javame/reference/apis/jsr082/javax/bluetooth/DiscoveryListener.html#deviceDiscovered(javax.bluetooth.RemoteDevice, javax.bluetooth.DeviceClass)">deviceDiscovered</A></B>(<A HREF="RemoteDevice.html" tppabs="http://java.sun.com/javame/reference/apis/jsr082/javax/bluetooth/RemoteDevice.html" title="class in javax.bluetooth">RemoteDevice</A>&nbsp;btDevice,
 * <A HREF="DeviceClass.html" tppabs="http://java.sun.com/javame/reference/apis/jsr082/javax/bluetooth/DeviceClass.html" title="class in javax.bluetooth">DeviceClass</A>&nbsp;cod)</CODE>
 * 
 * <BR>
 * &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Called when a device is found during an inquiry.</TD>
 * </TR>
 * <TR BGCOLOR="white" CLASS="TableRowColor">
 * <TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
 * <CODE>&nbsp;void</CODE></FONT></TD>
 * <TD><CODE><B><A HREF="DiscoveryListener.html#inquiryCompleted(int)" tppabs="http://java.sun.com/javame/reference/apis/jsr082/javax/bluetooth/DiscoveryListener.html#inquiryCompleted(int)">inquiryCompleted</A></B>(int&nbsp;discType)</CODE>
 * 
 * <BR>
 * &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Called when an inquiry is completed.</TD>
 * </TR>
 * <TR BGCOLOR="white" CLASS="TableRowColor">
 * <TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
 * <CODE>&nbsp;void</CODE></FONT></TD>
 * <TD><CODE><B><A HREF="DiscoveryListener.html#servicesDiscovered(int, javax.bluetooth.ServiceRecord[])" tppabs="http://java.sun.com/javame/reference/apis/jsr082/javax/bluetooth/DiscoveryListener.html#servicesDiscovered(int, javax.bluetooth.ServiceRecord[])">servicesDiscovered</A></B>(int&nbsp;transID,
 * <A HREF="ServiceRecord.html" tppabs="http://java.sun.com/javame/reference/apis/jsr082/javax/bluetooth/ServiceRecord.html" title="interface in javax.bluetooth">ServiceRecord</A>[]&nbsp;servRecord)</CODE>
 * 
 * <BR>
 * &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Called when service(s) are found during a service
 * search.</TD>
 * </TR>
 * <TR BGCOLOR="white" CLASS="TableRowColor">
 * <TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
 * <CODE>&nbsp;void</CODE></FONT></TD>
 * <TD><CODE><B><A HREF="DiscoveryListener.html#serviceSearchCompleted(int, int)" tppabs="http://java.sun.com/javame/reference/apis/jsr082/javax/bluetooth/DiscoveryListener.html#serviceSearchCompleted(int, int)">serviceSearchCompleted</A></B>(int&nbsp;transID,
 * int&nbsp;respCode)</CODE>
 * 
 * <BR>
 * &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Called when a service search is completed or
 * was terminated because of an error.</TD>
 * </TR>
 * </TABLE>
 * &nbsp;
 * 
 * <!-- ============ FIELD DETAIL =========== -->
 * 
 * <A NAME="field_detail"><!-- --></A>
 * <TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
 * <TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
 * <TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
 * <B>Field Detail</B></FONT></TH>
 * </TR>
 * </TABLE>
 * 
 * <A NAME="INQUIRY_COMPLETED"><!-- --></A><H3>
 * INQUIRY_COMPLETED</H3>
 * <PRE>
 * static final int <B>INQUIRY_COMPLETED</B></PRE>
 * <DD>Indicates the normal completion of device
 * discovery. Used with the <code>inquiryCompleted()</code> method.
 * The value of <code>INQUIRY_COMPLETED</code> is 0x00 (0).
 * <A HREF="DiscoveryAgent.html#startInquiry(int, javax.bluetooth.DiscoveryListener)" tppabs="http://java.sun.com/javame/reference/apis/jsr082/javax/bluetooth/DiscoveryAgent.html#startInquiry(int, javax.bluetooth.DiscoveryListener)"><CODE>DiscoveryAgent.startInquiry(int, javax.bluetooth.DiscoveryListener)</CODE></A>,
 * <A HREF="../../constant-values.html#javax.bluetooth.DiscoveryListener.INQUIRY_COMPLETED" tppabs="http://java.sun.com/javame/reference/apis/jsr082/constant-values.html#javax.bluetooth.DiscoveryListener.INQUIRY_COMPLETED">Constant Field Values</A></DL>
 * <HR>
 * 
 * <A NAME="INQUIRY_TERMINATED"><!-- --></A><H3>
 * INQUIRY_TERMINATED</H3>
 * <PRE>
 * static final int <B>INQUIRY_TERMINATED</B></PRE>
 * <DD>Indicates device discovery has been canceled
 * by the application and did not complete.
 * Used with the <code>inquiryCompleted()</code> method.
 * The value of <code>INQUIRY_TERMINATED</code> is 0x05 (5).
 * <A HREF="DiscoveryAgent.html#startInquiry(int, javax.bluetooth.DiscoveryListener)" tppabs="http://java.sun.com/javame/reference/apis/jsr082/javax/bluetooth/DiscoveryAgent.html#startInquiry(int, javax.bluetooth.DiscoveryListener)"><CODE>DiscoveryAgent.startInquiry(int, javax.bluetooth.DiscoveryListener)</CODE></A>,
 * <A HREF="DiscoveryAgent.html#cancelInquiry(javax.bluetooth.DiscoveryListener)" tppabs="http://java.sun.com/javame/reference/apis/jsr082/javax/bluetooth/DiscoveryAgent.html#cancelInquiry(javax.bluetooth.DiscoveryListener)"><CODE>DiscoveryAgent.cancelInquiry(javax.bluetooth.DiscoveryListener)</CODE></A>,
 * <A HREF="../../constant-values.html#javax.bluetooth.DiscoveryListener.INQUIRY_TERMINATED" tppabs="http://java.sun.com/javame/reference/apis/jsr082/constant-values.html#javax.bluetooth.DiscoveryListener.INQUIRY_TERMINATED">Constant Field Values</A></DL>
 * <HR>
 * 
 * <A NAME="INQUIRY_ERROR"><!-- --></A><H3>
 * INQUIRY_ERROR</H3>
 * <PRE>
 * static final int <B>INQUIRY_ERROR</B></PRE>
 * <DD>Indicates that the inquiry request failed to complete normally,
 * but was not cancelled.
 * The value of <code>INQUIRY_ERROR</code> is 0x07 (7).
 * <A HREF="DiscoveryAgent.html#startInquiry(int, javax.bluetooth.DiscoveryListener)" tppabs="http://java.sun.com/javame/reference/apis/jsr082/javax/bluetooth/DiscoveryAgent.html#startInquiry(int, javax.bluetooth.DiscoveryListener)"><CODE>DiscoveryAgent.startInquiry(int, javax.bluetooth.DiscoveryListener)</CODE></A>,
 * <A HREF="../../constant-values.html#javax.bluetooth.DiscoveryListener.INQUIRY_ERROR" tppabs="http://java.sun.com/javame/reference/apis/jsr082/constant-values.html#javax.bluetooth.DiscoveryListener.INQUIRY_ERROR">Constant Field Values</A></DL>
 * <HR>
 * 
 * <A NAME="SERVICE_SEARCH_COMPLETED"><!-- --></A><H3>
 * SERVICE_SEARCH_COMPLETED</H3>
 * <PRE>
 * static final int <B>SERVICE_SEARCH_COMPLETED</B></PRE>
 * <DD>Indicates the normal completion of service
 * discovery. Used with the <code>serviceSearchCompleted()</code>
 * method.
 * The value of <code>SERVICE_SEARCH_COMPLETED</code> is 0x01 (1).
 * <A HREF="DiscoveryAgent.html#searchServices(int[], javax.bluetooth.UUID[], javax.bluetooth.RemoteDevice, javax.bluetooth.DiscoveryListener)" tppabs="http://java.sun.com/javame/reference/apis/jsr082/javax/bluetooth/DiscoveryAgent.html#searchServices(int[], javax.bluetooth.UUID[], javax.bluetooth.RemoteDevice, javax.bluetooth.DiscoveryListener)"><CODE>DiscoveryAgent.searchServices(int[], javax.bluetooth.UUID[], javax.bluetooth.RemoteDevice, javax.bluetooth.DiscoveryListener)</CODE></A>,
 * <A HREF="../../constant-values.html#javax.bluetooth.DiscoveryListener.SERVICE_SEARCH_COMPLETED" tppabs="http://java.sun.com/javame/reference/apis/jsr082/constant-values.html#javax.bluetooth.DiscoveryListener.SERVICE_SEARCH_COMPLETED">Constant Field Values</A></DL>
 * <HR>
 * 
 * <A NAME="SERVICE_SEARCH_TERMINATED"><!-- --></A><H3>
 * SERVICE_SEARCH_TERMINATED</H3>
 * <PRE>
 * static final int <B>SERVICE_SEARCH_TERMINATED</B></PRE>
 * <DD>Indicates the service search has been canceled
 * by the application and did not complete.  Used with the
 * <code>serviceSearchCompleted()</code> method.
 * The value of <code>SERVICE_SEARCH_TERMINATED</code> is 0x02 (2).
 * <A HREF="DiscoveryAgent.html#searchServices(int[], javax.bluetooth.UUID[], javax.bluetooth.RemoteDevice, javax.bluetooth.DiscoveryListener)" tppabs="http://java.sun.com/javame/reference/apis/jsr082/javax/bluetooth/DiscoveryAgent.html#searchServices(int[], javax.bluetooth.UUID[], javax.bluetooth.RemoteDevice, javax.bluetooth.DiscoveryListener)"><CODE>DiscoveryAgent.searchServices(int[], javax.bluetooth.UUID[], javax.bluetooth.RemoteDevice, javax.bluetooth.DiscoveryListener)</CODE></A>,
 * <A HREF="DiscoveryAgent.html#cancelServiceSearch(int)" tppabs="http://java.sun.com/javame/reference/apis/jsr082/javax/bluetooth/DiscoveryAgent.html#cancelServiceSearch(int)"><CODE>DiscoveryAgent.cancelServiceSearch(int)</CODE></A>,
 * <A HREF="../../constant-values.html#javax.bluetooth.DiscoveryListener.SERVICE_SEARCH_TERMINATED" tppabs="http://java.sun.com/javame/reference/apis/jsr082/constant-values.html#javax.bluetooth.DiscoveryListener.SERVICE_SEARCH_TERMINATED">Constant Field Values</A></DL>
 * <HR>
 * 
 * <A NAME="SERVICE_SEARCH_ERROR"><!-- --></A><H3>
 * SERVICE_SEARCH_ERROR</H3>
 * <PRE>
 * static final int <B>SERVICE_SEARCH_ERROR</B></PRE>
 * <DD>Indicates the service search terminated with an error.
 * 
 * Used with the <code>serviceSearchCompleted()</code> method.
 * The value of <code>SERVICE_SEARCH_ERROR</code> is 0x03 (3).
 * <A HREF="DiscoveryAgent.html#searchServices(int[], javax.bluetooth.UUID[], javax.bluetooth.RemoteDevice, javax.bluetooth.DiscoveryListener)" tppabs="http://java.sun.com/javame/reference/apis/jsr082/javax/bluetooth/DiscoveryAgent.html#searchServices(int[], javax.bluetooth.UUID[], javax.bluetooth.RemoteDevice, javax.bluetooth.DiscoveryListener)"><CODE>DiscoveryAgent.searchServices(int[], javax.bluetooth.UUID[], javax.bluetooth.RemoteDevice, javax.bluetooth.DiscoveryListener)</CODE></A>,
 * <A HREF="../../constant-values.html#javax.bluetooth.DiscoveryListener.SERVICE_SEARCH_ERROR" tppabs="http://java.sun.com/javame/reference/apis/jsr082/constant-values.html#javax.bluetooth.DiscoveryListener.SERVICE_SEARCH_ERROR">Constant Field Values</A></DL>
 * <HR>
 * 
 * <A NAME="SERVICE_SEARCH_NO_RECORDS"><!-- --></A><H3>
 * SERVICE_SEARCH_NO_RECORDS</H3>
 * <PRE>
 * static final int <B>SERVICE_SEARCH_NO_RECORDS</B></PRE>
 * <DD>Indicates the service search has completed with no
 * service records found on the device.
 * 
 * Used with the <code>serviceSearchCompleted()</code> method.
 * The value of <code>SERVICE_SEARCH_NO_RECORDS</code> is 0x04 (4).
 * <A HREF="DiscoveryAgent.html#searchServices(int[], javax.bluetooth.UUID[], javax.bluetooth.RemoteDevice, javax.bluetooth.DiscoveryListener)" tppabs="http://java.sun.com/javame/reference/apis/jsr082/javax/bluetooth/DiscoveryAgent.html#searchServices(int[], javax.bluetooth.UUID[], javax.bluetooth.RemoteDevice, javax.bluetooth.DiscoveryListener)"><CODE>DiscoveryAgent.searchServices(int[], javax.bluetooth.UUID[], javax.bluetooth.RemoteDevice, javax.bluetooth.DiscoveryListener)</CODE></A>,
 * <A HREF="../../constant-values.html#javax.bluetooth.DiscoveryListener.SERVICE_SEARCH_NO_RECORDS" tppabs="http://java.sun.com/javame/reference/apis/jsr082/constant-values.html#javax.bluetooth.DiscoveryListener.SERVICE_SEARCH_NO_RECORDS">Constant Field Values</A></DL>
 * <HR>
 * 
 * <A NAME="SERVICE_SEARCH_DEVICE_NOT_REACHABLE"><!-- --></A><H3>
 * SERVICE_SEARCH_DEVICE_NOT_REACHABLE</H3>
 * <PRE>
 * static final int <B>SERVICE_SEARCH_DEVICE_NOT_REACHABLE</B></PRE>
 * <DD>Indicates the service search could not be completed because
 * the remote device provided to
 * <code>DiscoveryAgent.searchServices()</code> could not be
 * reached.
 * 
 * Used with the <code>serviceSearchCompleted()</code> method.
 * The value of <code>SERVICE_SEARCH_DEVICE_NOT_REACHABLE</code>
 * is 0x06 (6).
 * <A HREF="DiscoveryAgent.html#searchServices(int[], javax.bluetooth.UUID[], javax.bluetooth.RemoteDevice, javax.bluetooth.DiscoveryListener)" tppabs="http://java.sun.com/javame/reference/apis/jsr082/javax/bluetooth/DiscoveryAgent.html#searchServices(int[], javax.bluetooth.UUID[], javax.bluetooth.RemoteDevice, javax.bluetooth.DiscoveryListener)"><CODE>DiscoveryAgent.searchServices(int[], javax.bluetooth.UUID[], javax.bluetooth.RemoteDevice, javax.bluetooth.DiscoveryListener)</CODE></A>,
 * <A HREF="../../constant-values.html#javax.bluetooth.DiscoveryListener.SERVICE_SEARCH_DEVICE_NOT_REACHABLE" tppabs="http://java.sun.com/javame/reference/apis/jsr082/constant-values.html#javax.bluetooth.DiscoveryListener.SERVICE_SEARCH_DEVICE_NOT_REACHABLE">Constant Field Values</A></DL>
 * 
 * <!-- ============ METHOD DETAIL ========== -->
 * 
 * <A NAME="method_detail"><!-- --></A>
 * <TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
 * <TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
 * <TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
 * <B>Method Detail</B></FONT></TH>
 * </TR>
 * </TABLE>
 * 
 * <A NAME="deviceDiscovered(javax.bluetooth.RemoteDevice, javax.bluetooth.DeviceClass)"><!-- --></A><H3>
 * deviceDiscovered</H3>
 * <PRE>
 * void <B>deviceDiscovered</B>(<A HREF="RemoteDevice.html" tppabs="http://java.sun.com/javame/reference/apis/jsr082/javax/bluetooth/RemoteDevice.html" title="class in javax.bluetooth">RemoteDevice</A>&nbsp;btDevice,
 * <A HREF="DeviceClass.html" tppabs="http://java.sun.com/javame/reference/apis/jsr082/javax/bluetooth/DeviceClass.html" title="class in javax.bluetooth">DeviceClass</A>&nbsp;cod)</PRE>
 * <DD>Called when a device is found during an inquiry.  An inquiry
 * searches for devices that are discoverable.  The same device may
 * be returned multiple times.
 * device class of the remote device<DT><B>See Also:</B><DD><A HREF="DiscoveryAgent.html#startInquiry(int, javax.bluetooth.DiscoveryListener)" tppabs="http://java.sun.com/javame/reference/apis/jsr082/javax/bluetooth/DiscoveryAgent.html#startInquiry(int, javax.bluetooth.DiscoveryListener)"><CODE>DiscoveryAgent.startInquiry(int, javax.bluetooth.DiscoveryListener)</CODE></A></DL>
 * <HR>
 * 
 * <A NAME="servicesDiscovered(int, javax.bluetooth.ServiceRecord[])"><!-- --></A><H3>
 * servicesDiscovered</H3>
 * <PRE>
 * void <B>servicesDiscovered</B>(int&nbsp;transID,
 * <A HREF="ServiceRecord.html" tppabs="http://java.sun.com/javame/reference/apis/jsr082/javax/bluetooth/ServiceRecord.html" title="interface in javax.bluetooth">ServiceRecord</A>[]&nbsp;servRecord)</PRE>
 * <DD>Called when service(s) are found during a service
 * search.
 * posting the result<DD><CODE>servRecord</CODE> - a list of services found during the search request<DT><B>See Also:</B><DD><A HREF="DiscoveryAgent.html#searchServices(int[], javax.bluetooth.UUID[], javax.bluetooth.RemoteDevice, javax.bluetooth.DiscoveryListener)" tppabs="http://java.sun.com/javame/reference/apis/jsr082/javax/bluetooth/DiscoveryAgent.html#searchServices(int[], javax.bluetooth.UUID[], javax.bluetooth.RemoteDevice, javax.bluetooth.DiscoveryListener)"><CODE>DiscoveryAgent.searchServices(int[], javax.bluetooth.UUID[], javax.bluetooth.RemoteDevice, javax.bluetooth.DiscoveryListener)</CODE></A></DL>
 * <HR>
 * 
 * <A NAME="serviceSearchCompleted(int, int)"><!-- --></A><H3>
 * serviceSearchCompleted</H3>
 * <PRE>
 * void <B>serviceSearchCompleted</B>(int&nbsp;transID,
 * int&nbsp;respCode)</PRE>
 * <DD>Called when a service search is completed or
 * was terminated because of an error.  Legal status values in the
 * <code>respCode</code> argument include
 * <code>SERVICE_SEARCH_COMPLETED</code>,
 * <code>SERVICE_SEARCH_TERMINATED</code>,
 * <code>SERVICE_SEARCH_ERROR</code>,
 * <code>SERVICE_SEARCH_NO_RECORDS</code> and
 * <code>SERVICE_SEARCH_DEVICE_NOT_REACHABLE</code>.  The following
 * table describes when each <code>respCode</code> will be used:
 * <TABLE>
 * <TR><TH><code>respCode</code></TH><TH>Reason</TH></TR>
 * <TR><TD><code>SERVICE_SEARCH_COMPLETED</code></TD>
 * <TD>if the service search completed normally</TD></TR>
 * <TR><TD><code>SERVICE_SEARCH_TERMINATED</code></TD>
 * <TD>if the service search request was cancelled by a call to
 * <code>DiscoveryAgent.cancelServiceSearch()</code></TD></TR>
 * <TR><TD><code>SERVICE_SEARCH_ERROR</code></TD>
 * <TD>if an error occurred while processing the request</TD></TR>
 * <TR><TD><code>SERVICE_SEARCH_NO_RECORDS</code></TD>
 * <TD>if no records were found during the service search</TD></TR>
 * <TR><TD><code>SERVICE_SEARCH_DEVICE_NOT_REACHABLE</code></TD>
 * <TD>if the device specified in the search request could not be
 * reached or the local device could not establish a connection to the
 * remote device</TD></TR>
 * </TABLE>
 * initiated the service search<DD><CODE>respCode</CODE> - the response code that indicates the
 * status of the transaction</DL>
 * <HR>
 * 
 * <A NAME="inquiryCompleted(int)"><!-- --></A><H3>
 * inquiryCompleted</H3>
 * <PRE>
 * void <B>inquiryCompleted</B>(int&nbsp;discType)</PRE>
 * <DD>Called when an inquiry is completed. The <code>discType</code> will be
 * <code>INQUIRY_COMPLETED</code> if the inquiry ended normally or
 * <code>INQUIRY_TERMINATED</code> if the inquiry was canceled by a call to
 * <code>DiscoveryAgent.cancelInquiry()</code>.  The <code>discType</code>
 * will be <code>INQUIRY_ERROR</code> if an error occurred while
 * processing the inquiry causing the inquiry to end abnormally.
 * <code>INQUIRY_COMPLETED</code>, <code>INQUIRY_TERMINATED</code>, or
 * <code>INQUIRY_ERROR</code><DT><B>See Also:</B><DD><A HREF="DiscoveryListener.html#INQUIRY_COMPLETED" tppabs="http://java.sun.com/javame/reference/apis/jsr082/javax/bluetooth/DiscoveryListener.html#INQUIRY_COMPLETED"><CODE>INQUIRY_COMPLETED</CODE></A>,
 * <A HREF="DiscoveryListener.html#INQUIRY_TERMINATED" tppabs="http://java.sun.com/javame/reference/apis/jsr082/javax/bluetooth/DiscoveryListener.html#INQUIRY_TERMINATED"><CODE>INQUIRY_TERMINATED</CODE></A>,
 * <A HREF="DiscoveryListener.html#INQUIRY_ERROR" tppabs="http://java.sun.com/javame/reference/apis/jsr082/javax/bluetooth/DiscoveryListener.html#INQUIRY_ERROR"><CODE>INQUIRY_ERROR</CODE></A></DL>
 * <!-- ========= END OF CLASS DATA ========= -->
 * <HR>
 * 
 * 
 * <!-- ======= START OF BOTTOM NAVBAR ====== -->
 * <A NAME="navbar_bottom"><!-- --></A>
 * <A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
 * <TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
 * <TR>
 * <TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
 * <A NAME="navbar_bottom_firstrow"><!-- --></A>
 * <TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
 * <TR ALIGN="center" VALIGN="top">
 * <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../overview-summary.html" tppabs="http://java.sun.com/javame/reference/apis/jsr082/overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
 * <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html" tppabs="http://java.sun.com/javame/reference/apis/jsr082/javax/bluetooth/package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
 * <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
 * <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html" tppabs="http://java.sun.com/javame/reference/apis/jsr082/javax/bluetooth/package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
 * <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../deprecated-list.html" tppabs="http://java.sun.com/javame/reference/apis/jsr082/deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
 * <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../index-all.html" tppabs="http://java.sun.com/javame/reference/apis/jsr082/index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
 * <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../help-doc.html" tppabs="http://java.sun.com/javame/reference/apis/jsr082/help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
 * </TR>
 * </TABLE>
 * </TD>
 * <TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
 * <b>JSR 82</b></EM>
 * </TD>
 * </TR>
 * 
 * <TR>
 * <TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
 * &nbsp;<A HREF="DiscoveryAgent.html" tppabs="http://java.sun.com/javame/reference/apis/jsr082/javax/bluetooth/DiscoveryAgent.html" title="class in javax.bluetooth"><B>PREV CLASS</B></A>&nbsp;
 * &nbsp;<A HREF="L2CAPConnection.html" tppabs="http://java.sun.com/javame/reference/apis/jsr082/javax/bluetooth/L2CAPConnection.html" title="interface in javax.bluetooth"><B>NEXT CLASS</B></A></FONT></TD>
 * <TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
 * <A HREF="../../index.html-javax-bluetooth-DiscoveryListener.html" tppabs="http://java.sun.com/javame/reference/apis/jsr082/index.html?javax/bluetooth/DiscoveryListener.html" target="_top"><B>FRAMES</B></A>  &nbsp;
 * &nbsp;<A HREF="DiscoveryListener.html" tppabs="http://java.sun.com/javame/reference/apis/jsr082/javax/bluetooth/DiscoveryListener.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
 * &nbsp;<SCRIPT type="text/javascript">
 * <!--
 * if(window==top) {
 * document.writeln('<A HREF="../../allclasses-noframe.html"tpa=http://java.sun.com/javame/reference/apis/jsr082/allclasses-noframe.html><B>All Classes</B></A>');
 * }
 * //-->
 * </SCRIPT>
 * <NOSCRIPT>
 * <A HREF="../../allclasses-noframe.html" tppabs="http://java.sun.com/javame/reference/apis/jsr082/allclasses-noframe.html"><B>All Classes</B></A>
 * </NOSCRIPT>
 * 
 * 
 * </FONT></TD>
 * </TR>
 * <TR>
 * <TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
 * SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
 * <TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
 * DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
 * </TR>
 * </TABLE>
 * <A NAME="skip-navbar_bottom"></A>
 * <!-- ======== END OF BOTTOM NAVBAR ======= -->
 * 
 * <HR>
 * <small>Copyright (c) 2006 Sun Microsystems, Inc. All rights reserved. <b>Use is subject to <a href="http://java.sun.com/javame/reference/apis/license.html" target="_top">License Terms</a>.</b> Your use of this web site or any of its content or software indicates your agreement to be bound by these License Terms.<br><br>For more information, please consult the <a href="http://jcp.org/en/jsr/detail?id=82" target="_top">JSR 82 specification.</a></small>
 * </BODY>
 * <script language="JavaScript" src="../../../../../../js/omi/jsc/s_code_remote.js" tppabs="http://java.sun.com/js/omi/jsc/s_code_remote.js"></script></HTML>
 * 
 */
public interface DiscoveryListener
{
	/**
	 * Indicates the normal completion of device
	 * discovery. Used with the <code>inquiryCompleted()</code> method.
	 * <P>
	 * The value of <code>INQUIRY_COMPLETED</code> is 0x00 (0).
	 * <P>
	 * <DT><B>See Also:</B>
	 * <A HREF="DiscoveryAgent.html#startInquiry(int, javax.bluetooth.DiscoveryListener)" tppabs="http://java.sun.com/javame/reference/apis/jsr082/javax/bluetooth/DiscoveryAgent.html#startInquiry(int, javax.bluetooth.DiscoveryListener)"><CODE>DiscoveryAgent.startInquiry(int, javax.bluetooth.DiscoveryListener)</CODE></A>,
	 * <A HREF="../../constant-values.html#javax.bluetooth.DiscoveryListener.INQUIRY_COMPLETED" tppabs="http://java.sun.com/javame/reference/apis/jsr082/constant-values.html#javax.bluetooth.DiscoveryListener.INQUIRY_COMPLETED">Constant Field Values</A></DL>
	 * 
	 */
	int INQUIRY_COMPLETED = 0x00;

	/**
	 * Indicates device discovery has been canceled
	 * by the application and did not complete.
	 * Used with the <code>inquiryCompleted()</code> method.
	 * <P>
	 * The value of <code>INQUIRY_TERMINATED</code> is 0x05 (5).
	 * <P>
	 * <DT><B>See Also:</B>
	 * <A HREF="DiscoveryAgent.html#startInquiry(int, javax.bluetooth.DiscoveryListener)" tppabs="http://java.sun.com/javame/reference/apis/jsr082/javax/bluetooth/DiscoveryAgent.html#startInquiry(int, javax.bluetooth.DiscoveryListener)"><CODE>DiscoveryAgent.startInquiry(int, javax.bluetooth.DiscoveryListener)</CODE></A>,
	 * <A HREF="DiscoveryAgent.html#cancelInquiry(javax.bluetooth.DiscoveryListener)" tppabs="http://java.sun.com/javame/reference/apis/jsr082/javax/bluetooth/DiscoveryAgent.html#cancelInquiry(javax.bluetooth.DiscoveryListener)"><CODE>DiscoveryAgent.cancelInquiry(javax.bluetooth.DiscoveryListener)</CODE></A>,
	 * <A HREF="../../constant-values.html#javax.bluetooth.DiscoveryListener.INQUIRY_TERMINATED" tppabs="http://java.sun.com/javame/reference/apis/jsr082/constant-values.html#javax.bluetooth.DiscoveryListener.INQUIRY_TERMINATED">Constant Field Values</A></DL>
	 * 
	 */
	int INQUIRY_TERMINATED = 0x05;

	/**
	 * Indicates that the inquiry request failed to complete normally,
	 * but was not cancelled.
	 * <P>
	 * The value of <code>INQUIRY_ERROR</code> is 0x07 (7).
	 * <P>
	 * <DT><B>See Also:</B>
	 * <A HREF="DiscoveryAgent.html#startInquiry(int, javax.bluetooth.DiscoveryListener)" tppabs="http://java.sun.com/javame/reference/apis/jsr082/javax/bluetooth/DiscoveryAgent.html#startInquiry(int, javax.bluetooth.DiscoveryListener)"><CODE>DiscoveryAgent.startInquiry(int, javax.bluetooth.DiscoveryListener)</CODE></A>,
	 * <A HREF="../../constant-values.html#javax.bluetooth.DiscoveryListener.INQUIRY_ERROR" tppabs="http://java.sun.com/javame/reference/apis/jsr082/constant-values.html#javax.bluetooth.DiscoveryListener.INQUIRY_ERROR">Constant Field Values</A></DL>
	 * 
	 */
	int INQUIRY_ERROR = 0x07;

	/**
	 * Indicates the normal completion of service
	 * discovery. Used with the <code>serviceSearchCompleted()</code>
	 * method.
	 * <P>
	 * The value of <code>SERVICE_SEARCH_COMPLETED</code> is 0x01 (1).
	 * <P>
	 * <DT><B>See Also:</B>
	 * <A HREF="DiscoveryAgent.html#searchServices(int[], javax.bluetooth.UUID[], javax.bluetooth.RemoteDevice, javax.bluetooth.DiscoveryListener)" tppabs="http://java.sun.com/javame/reference/apis/jsr082/javax/bluetooth/DiscoveryAgent.html#searchServices(int[], javax.bluetooth.UUID[], javax.bluetooth.RemoteDevice, javax.bluetooth.DiscoveryListener)"><CODE>DiscoveryAgent.searchServices(int[], javax.bluetooth.UUID[], javax.bluetooth.RemoteDevice, javax.bluetooth.DiscoveryListener)</CODE></A>,
	 * <A HREF="../../constant-values.html#javax.bluetooth.DiscoveryListener.SERVICE_SEARCH_COMPLETED" tppabs="http://java.sun.com/javame/reference/apis/jsr082/constant-values.html#javax.bluetooth.DiscoveryListener.SERVICE_SEARCH_COMPLETED">Constant Field Values</A></DL>
	 * 
	 */
	int SERVICE_SEARCH_COMPLETED = 0x01;

	/**
	 * Indicates the service search has been canceled
	 * by the application and did not complete.  Used with the
	 * <code>serviceSearchCompleted()</code> method.
	 * <P>
	 * The value of <code>SERVICE_SEARCH_TERMINATED</code> is 0x02 (2).
	 * <P>
	 * <DT><B>See Also:</B>
	 * <A HREF="DiscoveryAgent.html#searchServices(int[], javax.bluetooth.UUID[], javax.bluetooth.RemoteDevice, javax.bluetooth.DiscoveryListener)" tppabs="http://java.sun.com/javame/reference/apis/jsr082/javax/bluetooth/DiscoveryAgent.html#searchServices(int[], javax.bluetooth.UUID[], javax.bluetooth.RemoteDevice, javax.bluetooth.DiscoveryListener)"><CODE>DiscoveryAgent.searchServices(int[], javax.bluetooth.UUID[], javax.bluetooth.RemoteDevice, javax.bluetooth.DiscoveryListener)</CODE></A>,
	 * <A HREF="DiscoveryAgent.html#cancelServiceSearch(int)" tppabs="http://java.sun.com/javame/reference/apis/jsr082/javax/bluetooth/DiscoveryAgent.html#cancelServiceSearch(int)"><CODE>DiscoveryAgent.cancelServiceSearch(int)</CODE></A>,
	 * <A HREF="../../constant-values.html#javax.bluetooth.DiscoveryListener.SERVICE_SEARCH_TERMINATED" tppabs="http://java.sun.com/javame/reference/apis/jsr082/constant-values.html#javax.bluetooth.DiscoveryListener.SERVICE_SEARCH_TERMINATED">Constant Field Values</A></DL>
	 * 
	 */
	int SERVICE_SEARCH_TERMINATED = 0x02;

	/**
	 * Indicates the service search terminated with an error.
	 * 
	 * Used with the <code>serviceSearchCompleted()</code> method.
	 * <P>
	 * The value of <code>SERVICE_SEARCH_ERROR</code> is 0x03 (3).
	 * <P>
	 * <DT><B>See Also:</B>
	 * <A HREF="DiscoveryAgent.html#searchServices(int[], javax.bluetooth.UUID[], javax.bluetooth.RemoteDevice, javax.bluetooth.DiscoveryListener)" tppabs="http://java.sun.com/javame/reference/apis/jsr082/javax/bluetooth/DiscoveryAgent.html#searchServices(int[], javax.bluetooth.UUID[], javax.bluetooth.RemoteDevice, javax.bluetooth.DiscoveryListener)"><CODE>DiscoveryAgent.searchServices(int[], javax.bluetooth.UUID[], javax.bluetooth.RemoteDevice, javax.bluetooth.DiscoveryListener)</CODE></A>,
	 * <A HREF="../../constant-values.html#javax.bluetooth.DiscoveryListener.SERVICE_SEARCH_ERROR" tppabs="http://java.sun.com/javame/reference/apis/jsr082/constant-values.html#javax.bluetooth.DiscoveryListener.SERVICE_SEARCH_ERROR">Constant Field Values</A></DL>
	 * 
	 */
	int SERVICE_SEARCH_ERROR = 0x03;

	/**
	 * Indicates the service search has completed with no
	 * service records found on the device.
	 * 
	 * Used with the <code>serviceSearchCompleted()</code> method.
	 * <P>
	 * The value of <code>SERVICE_SEARCH_NO_RECORDS</code> is 0x04 (4).
	 * <P>
	 * <DT><B>See Also:</B>
	 * <A HREF="DiscoveryAgent.html#searchServices(int[], javax.bluetooth.UUID[], javax.bluetooth.RemoteDevice, javax.bluetooth.DiscoveryListener)" tppabs="http://java.sun.com/javame/reference/apis/jsr082/javax/bluetooth/DiscoveryAgent.html#searchServices(int[], javax.bluetooth.UUID[], javax.bluetooth.RemoteDevice, javax.bluetooth.DiscoveryListener)"><CODE>DiscoveryAgent.searchServices(int[], javax.bluetooth.UUID[], javax.bluetooth.RemoteDevice, javax.bluetooth.DiscoveryListener)</CODE></A>,
	 * <A HREF="../../constant-values.html#javax.bluetooth.DiscoveryListener.SERVICE_SEARCH_NO_RECORDS" tppabs="http://java.sun.com/javame/reference/apis/jsr082/constant-values.html#javax.bluetooth.DiscoveryListener.SERVICE_SEARCH_NO_RECORDS">Constant Field Values</A></DL>
	 * 
	 */
	int SERVICE_SEARCH_NO_RECORDS = 0x04;

	/**
	 * Indicates the service search could not be completed because
	 * the remote device provided to
	 * <code>DiscoveryAgent.searchServices()</code> could not be
	 * reached.
	 * 
	 * Used with the <code>serviceSearchCompleted()</code> method.
	 * <P>
	 * The value of <code>SERVICE_SEARCH_DEVICE_NOT_REACHABLE</code>
	 * is 0x06 (6).
	 * <P>
	 * <DT><B>See Also:</B>
	 * <A HREF="DiscoveryAgent.html#searchServices(int[], javax.bluetooth.UUID[], javax.bluetooth.RemoteDevice, javax.bluetooth.DiscoveryListener)" tppabs="http://java.sun.com/javame/reference/apis/jsr082/javax/bluetooth/DiscoveryAgent.html#searchServices(int[], javax.bluetooth.UUID[], javax.bluetooth.RemoteDevice, javax.bluetooth.DiscoveryListener)"><CODE>DiscoveryAgent.searchServices(int[], javax.bluetooth.UUID[], javax.bluetooth.RemoteDevice, javax.bluetooth.DiscoveryListener)</CODE></A>,
	 * <A HREF="../../constant-values.html#javax.bluetooth.DiscoveryListener.SERVICE_SEARCH_DEVICE_NOT_REACHABLE" tppabs="http://java.sun.com/javame/reference/apis/jsr082/constant-values.html#javax.bluetooth.DiscoveryListener.SERVICE_SEARCH_DEVICE_NOT_REACHABLE">Constant Field Values</A></DL>
	 * 
	 * 
	 */
	int SERVICE_SEARCH_DEVICE_NOT_REACHABLE = 0x06;


	/**
	 * Called when a device is found during an inquiry.  An inquiry
	 * searches for devices that are discoverable.  The same device may
	 * be returned multiple times.
	 * <P>
	 * 
	 * @param btDevice - the device that was found during the inquiry
	 * @param cod - the service classes, major device class, and minor device class of the remote device
	 * @see DiscoveryAgent#startInquiry(int, DiscoveryListener)
	 */
	void deviceDiscovered( RemoteDevice btDevice, DeviceClass cod);

	/**
	 * Called when service(s) are found during a service
	 * search.
	 * <P>
	 * 
	 * @param transID - the transaction ID of the service search that is posting the result
	 * @param servRecord - a list of services found during the search request
	 * @see DiscoveryAgent#searchServices(int[], UUID[], RemoteDevice, DiscoveryListener)
	 */
	void servicesDiscovered(int transID, ServiceRecord[] servRecord);

	/**
	 * Called when a service search is completed or
	 * was terminated because of an error.  Legal status values in the
	 * <code>respCode</code> argument include
	 * <code>SERVICE_SEARCH_COMPLETED</code>,
	 * <code>SERVICE_SEARCH_TERMINATED</code>,
	 * <code>SERVICE_SEARCH_ERROR</code>,
	 * <code>SERVICE_SEARCH_NO_RECORDS</code> and
	 * <code>SERVICE_SEARCH_DEVICE_NOT_REACHABLE</code>.  The following
	 * table describes when each <code>respCode</code> will be used:
	 * <TABLE>
	 * <TR><TH><code>respCode</code></TH><TH>Reason</TH></TR>
	 * <TR><TD><code>SERVICE_SEARCH_COMPLETED</code></TD>
	 * <TD>if the service search completed normally</TD></TR>
	 * <TR><TD><code>SERVICE_SEARCH_TERMINATED</code></TD>
	 * <TD>if the service search request was cancelled by a call to
	 * <code>DiscoveryAgent.cancelServiceSearch()</code></TD></TR>
	 * <TR><TD><code>SERVICE_SEARCH_ERROR</code></TD>
	 * <TD>if an error occurred while processing the request</TD></TR>
	 * <TR><TD><code>SERVICE_SEARCH_NO_RECORDS</code></TD>
	 * <TD>if no records were found during the service search</TD></TR>
	 * <TR><TD><code>SERVICE_SEARCH_DEVICE_NOT_REACHABLE</code></TD>
	 * <TD>if the device specified in the search request could not be
	 * reached or the local device could not establish a connection to the
	 * remote device</TD></TR>
	 * </TABLE>
	 * <P>
	 * 
	 * @param transID - the transaction ID identifying the request which initiated the service search
	 * @param respCode - the response code that indicates the status of the transaction
	 */
	void serviceSearchCompleted(int transID, int respCode);

	/**
	 * Called when an inquiry is completed. The <code>discType</code> will be
	 * <code>INQUIRY_COMPLETED</code> if the inquiry ended normally or
	 * <code>INQUIRY_TERMINATED</code> if the inquiry was canceled by a call to
	 * <code>DiscoveryAgent.cancelInquiry()</code>.  The <code>discType</code>
	 * will be <code>INQUIRY_ERROR</code> if an error occurred while
	 * processing the inquiry causing the inquiry to end abnormally.
	 * <P>
	 * 
	 * @param discType - the type of request that was completed; either INQUIRY_COMPLETED, INQUIRY_TERMINATED, or INQUIRY_ERROR
	 * @see #INQUIRY_COMPLETED
	 * @see #INQUIRY_TERMINATED
	 * @see #INQUIRY_ERROR
	 */
	void inquiryCompleted(int discType);

}
